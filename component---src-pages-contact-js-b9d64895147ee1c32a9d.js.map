{"version":3,"sources":["webpack:///./src/components/Forms/MessageForm.js","webpack:///./src/pages/contact.js"],"names":["MessageForm","props","handleChange","e","preventDefault","target","value","name","setState","prevState","user","console","log","state","handleSubmit","data","fullName","company","email","msg","message","fetch","method","mode","headers","body","JSON","stringify","then","res","json","companyName","render","className","styles","Form__Container","onSubmit","this","htmlFor","type","onChange","required","Button","text","Component","Contact","MiniHero","image"],"mappings":"gNA2FeA,E,oBAtFX,WAAYC,GAAO,IAAD,SACd,cAAMA,IAAN,MAYJC,aAAe,SAAAC,GACXA,EAAEC,iBACF,IAAMC,EAASF,EAAEE,OACXC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpB,EAAKC,UAAU,SAAAC,GAAc,IAAD,EACxB,MAAO,CACHC,KAAI,iBACGD,EAAUC,MADb,OACoBH,GAAOD,EAD3B,QAIT,kBAAMK,QAAQC,IAAI,EAAKC,MAAMH,UAzBlB,EA4BlBI,aAAe,SAAAX,GACXA,EAAEC,iBACF,IAAMW,EAAO,EAAKF,MAAMH,KAClBH,EAAOQ,EAAKC,SACZC,EAAUF,EAAKE,QACfC,EAAQH,EAAKG,MACbC,EAAMJ,EAAKK,QAEjBT,QAAQC,IAAIL,GAEZc,MAAM,qCAAqC,CACvCC,OAAQ,OACRC,KAAM,UACNC,QAAS,CACL,OAAU,+BACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBpB,OACAU,UACAC,QACAC,UAELS,MAAK,SAAAC,GACJA,EAAIC,OAAOF,MAAK,SAAAb,GAAI,OAAIJ,QAAQC,IAAI,UAAYG,SAGpD,EAAKP,SAAS,CACVE,KAAM,CACFH,KAAM,GACNU,QAAS,GACTC,MAAO,GACPC,IAAK,MAIbR,QAAQC,IAAI,EAAKC,MAAMH,OA7DvB,EAAKG,MAAQ,CACTH,KAAM,CACFM,SAAU,GACVe,YAAa,GACbb,MAAO,GACPE,QAAS,KARH,E,0GAmElBY,OAAA,WACI,OACI,yBAAKC,UAAWC,IAAOC,iBACnB,0BAAMC,SAAUC,KAAKvB,cACjB,2BAAOwB,QAAQ,QAAf,aACA,2BAAO/B,KAAK,OAAOgC,KAAK,OAAOC,SAAUH,KAAKnC,aAAcuC,UAAQ,IACpE,2BAAOH,QAAQ,WAAf,gBACA,2BAAO/B,KAAK,UAAUgC,KAAK,OAAOC,SAAUH,KAAKnC,aAAcuC,UAAQ,IACvE,2BAAOH,QAAQ,SAAf,iBACA,2BAAO/B,KAAK,QAAQgC,KAAK,QAAQC,SAAUH,KAAKnC,aAAcuC,UAAQ,IACtE,2BAAOH,QAAQ,WAAf,sBACA,8BAAU/B,KAAK,aAEnB,kBAACmC,EAAA,EAAD,CAAQH,KAAK,SAASI,KAAK,a,GAjFjBC,a,YCaXC,UAXC,WACZ,OACI,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,MAAM,yGAChB,wBAAId,UAAU,iBAAd,cACA,uBAAGA,UAAU,yBAAb,wGACA,kBAAC,EAAD","file":"component---src-pages-contact-js-b9d64895147ee1c32a9d.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '../Utils/Button';\r\nimport styles from './form.module.scss';\r\n\r\nclass MessageForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: {\r\n                fullName: '',\r\n                companyName: '',\r\n                email: '',\r\n                message: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState( prevState => {\r\n            return {\r\n                user : {\r\n                    ...prevState.user, [name]: value\r\n                }\r\n            }\r\n        }, () => console.log(this.state.user));\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const data = this.state.user;\r\n        const name = data.fullName;\r\n        const company = data.company;\r\n        const email = data.email;\r\n        const msg = data.message;\r\n\r\n        console.log(name)\r\n\r\n        fetch('http://localhost:5000/v1/messenger',{\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                company,\r\n                email,\r\n                msg\r\n            })\r\n        }).then(res => {\r\n            res.json().then(data => console.log('success' + data))\r\n        });\r\n\r\n        this.setState({\r\n            user: {\r\n                name: '',\r\n                company: '',\r\n                email: '',\r\n                msg: ''\r\n            }\r\n        });\r\n\r\n        console.log(this.state.user)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Form__Container}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"name\">Full Name</label>\r\n                    <input name=\"name\" type=\"text\" onChange={this.handleChange} required />\r\n                    <label htmlFor=\"company\">Company Name</label>\r\n                    <input name=\"company\" type=\"text\" onChange={this.handleChange} required />\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input name=\"email\" type=\"email\" onChange={this.handleChange} required />\r\n                    <label htmlFor=\"message\">Enter your message</label>\r\n                    <textarea name=\"message\"></textarea>\r\n                </form>\r\n                <Button type=\"submit\" text=\"Submit\"></Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageForm;","import React from 'react';\r\nimport '../GlobalStyles/global.scss';\r\nimport MiniHero from '../components/Elements/MiniHero';\r\nimport MessageForm from '../components/Forms/MessageForm';\r\nimport Layout from '../layouts/MainLayout';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <Layout>\r\n            <MiniHero image=\"https://images.pexels.com/photos/33999/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" />\r\n            <h1 className=\"Page__Heading\">Contact Me</h1>\r\n            <p className=\"Page__Heading_Subtext\">Send me a message! This will send you an email and notify me of your message as soon as you send it.</p>\r\n            <MessageForm />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Contact;"],"sourceRoot":""}