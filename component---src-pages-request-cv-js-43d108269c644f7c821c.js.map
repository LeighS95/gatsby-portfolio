{"version":3,"sources":["webpack:///./src/components/Elements/FlexBlock.js","webpack:///./src/components/Forms/CvRequestForm.js","webpack:///./src/pages/request-cv.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["FlexBlock","props","children","className","styles","FlexBox","CvRequestForm","handleChange","e","preventDefault","target","value","name","setState","prevState","user","handleSubmit","data","a","async","fetch","method","mode","headers","body","JSON","stringify","company","email","then","res","json","console","log","sendEmail","state","msgSent","render","this","Form__Container","onSubmit","htmlFor","type","onChange","required","Button","text","style","margin","color","Component","CvPage","MiniHero","image","display","flexDirection","justifyContent","link","isLink","module","exports","runtime","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-request-cv-js-43d108269c644f7c821c.js","sourcesContent":["import React from 'react';\r\nimport styles from './flexblock.module.scss';\r\n\r\nconst FlexBlock = props => {\r\n    const { children } = props;\r\n    return (\r\n        <div className={styles.FlexBox}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlexBlock;","import React, { Component } from 'react';\r\nimport Button from '../Utils/Button';\r\nimport styles from './form.module.scss';\r\n\r\nclass CvRequestForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            user :{\r\n                name: '',\r\n                company: '',\r\n                email: ''\r\n            },\r\n            msgSent: false\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState( prevState => {\r\n            return {\r\n                user : {\r\n                    ...prevState.user, [name]: value\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const data = this.state.user;\r\n\r\n        async function sendEmail(data) {\r\n            await fetch('https://fathomless-springs-03812.herokuapp.com/v1/mailer',{\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"name\": data.name,\r\n                \"company\": data.company,\r\n                \"email\": data.email\r\n            })\r\n        }).then(res => {\r\n            res.json().then(data => console.log('success' + data))\r\n        });\r\n        }\r\n\r\n        sendEmail(data);\r\n        \r\n\r\n        this.setState({\r\n            user: {\r\n                name: '',\r\n                company: '',\r\n                email: ''\r\n            },\r\n            msgSent: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { msgSent } = this.state;\r\n        return (\r\n            <div className={styles.Form__Container}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"name\">Full Name</label>\r\n                    <input name=\"name\" type=\"text\" onChange={this.handleChange} required />\r\n                    <label htmlFor=\"company\">Company Name</label>\r\n                    <input name=\"company\" type=\"text\" onChange={this.handleChange} required />\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input name=\"email\" type=\"email\" onChange={this.handleChange} required />\r\n                    <Button text=\"Request CV\" type=\"submit\"></Button>\r\n                </form>\r\n                {msgSent ? (\r\n                    <p style={{margin: '20px', color: 'green'}}>My CV should be sent to your email soon!</p>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CvRequestForm;","import React from 'react';\r\nimport '../GlobalStyles/global.scss';\r\nimport Layout from '../layouts/MainLayout';\r\nimport MiniHero from '../components/Elements/MiniHero';\r\nimport FlexBlock from '../components/Elements/FlexBlock';\r\nimport CvRequestForm from '../components/Forms/CvRequestForm';\r\nimport Button from '../components/Utils/Button';\r\n\r\nconst CvPage = () => {\r\n    return (\r\n        <Layout>\r\n            <MiniHero image=\"https://images.pexels.com/photos/33999/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" />\r\n            <h1>How would you like to view my CV?</h1>\r\n            <p>View in browser or have it sent to your email?</p>\r\n\r\n            <FlexBlock>\r\n                <CvRequestForm />\r\n                <div style={{\r\n                    display: 'flex', flexDirection: 'column', justifyContent: 'center'\r\n                }}>\r\n                    <h2>OR view as a PDF?</h2>\r\n                    <Button text=\"View CV\" link=\"/view-cv\" isLink />\r\n                </div>\r\n            </FlexBlock>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CvPage;","module.exports = require(\"regenerator-runtime\");\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}"],"sourceRoot":""}