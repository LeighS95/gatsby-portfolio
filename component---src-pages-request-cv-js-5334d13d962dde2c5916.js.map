{"version":3,"sources":["webpack:///./src/components/Elements/FlexBlock.js","webpack:///./src/components/Forms/CvRequestForm.js","webpack:///./src/pages/request-cv.js"],"names":["FlexBlock","props","children","className","styles","FlexBox","CvRequestForm","handleChange","e","preventDefault","target","value","name","setState","prevState","user","console","log","state","handleSubmit","data","company","email","fetch","method","mode","headers","body","JSON","stringify","then","res","json","render","Form__Container","onSubmit","this","htmlFor","type","onChange","required","Button","text","Component","CvPage","MiniHero","image","style","display","flexDirection","justifyContent","link","isLink"],"mappings":"6FAAA,8CAYeA,IATG,SAAAC,GAAU,IAChBC,EAAaD,EAAbC,SACR,OACI,yBAAKC,UAAWC,IAAOC,SAClBH,K,6KC8EEI,E,oBAhFX,WAAYL,GAAO,IAAD,SACd,cAAMA,IAAN,MAWJM,aAAe,SAAAC,GACXA,EAAEC,iBACF,IAAMC,EAASF,EAAEE,OACXC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpB,EAAKC,UAAU,SAAAC,GAAc,IAAD,EACxB,MAAO,CACHC,KAAI,iBACGD,EAAUC,MADb,OACoBH,GAAOD,EAD3B,QAIT,kBAAMK,QAAQC,IAAI,EAAKC,MAAMH,UAxBlB,EA2BlBI,aAAe,SAAAX,GACXA,EAAEC,iBACF,IAAMW,EAAO,EAAKF,MAAMH,KAClBH,EAAOQ,EAAKR,KACZS,EAAUD,EAAKC,QACfC,EAAQF,EAAKE,MAEnBN,QAAQC,IAAIL,GAEZW,MAAM,kCAAkC,CACpCC,OAAQ,OACRC,KAAM,UACNC,QAAS,CACL,OAAU,+BACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBjB,OACAS,UACAC,YAELQ,MAAK,SAAAC,GACJA,EAAIC,OAAOF,MAAK,SAAAV,GAAI,OAAIJ,QAAQC,IAAI,UAAYG,SAGpD,EAAKP,SAAS,CACVE,KAAM,CACFH,KAAM,GACNS,QAAS,GACTC,MAAO,MAIfN,QAAQC,IAAI,EAAKC,MAAMH,OAzDvB,EAAKG,MAAQ,CACTH,KAAM,CACFH,KAAM,GACNS,QAAS,GACTC,MAAO,KAPD,E,0GA+DlBW,OAAA,WACI,OACI,yBAAK9B,UAAWC,IAAO8B,iBACnB,0BAAMC,SAAUC,KAAKjB,cACjB,2BAAOkB,QAAQ,QAAf,aACA,2BAAOzB,KAAK,OAAO0B,KAAK,OAAOC,SAAUH,KAAK7B,aAAciC,UAAQ,IACpE,2BAAOH,QAAQ,WAAf,gBACA,2BAAOzB,KAAK,UAAU0B,KAAK,OAAOC,SAAUH,KAAK7B,aAAciC,UAAQ,IACvE,2BAAOH,QAAQ,SAAf,iBACA,2BAAOzB,KAAK,QAAQ0B,KAAK,QAAQC,SAAUH,KAAK7B,aAAciC,UAAQ,IACtE,kBAACC,EAAA,EAAD,CAAQC,KAAK,aAAaJ,KAAK,c,GA1EvBK,aCwBbC,UApBA,WACX,OACI,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,MAAM,yGAChB,iEACA,6EAEA,kBAAC9C,EAAA,EAAD,KACI,kBAAC,EAAD,MACA,yBAAK+C,MAAO,CACRC,QAAS,OAAQC,cAAe,SAAUC,eAAgB,WAE1D,iDACA,kBAACT,EAAA,EAAD,CAAQC,KAAK,UAAUS,KAAK,WAAWC,QAAM","file":"component---src-pages-request-cv-js-5334d13d962dde2c5916.js","sourcesContent":["import React from 'react';\r\nimport styles from './flexblock.module.scss';\r\n\r\nconst FlexBlock = props => {\r\n    const { children } = props;\r\n    return (\r\n        <div className={styles.FlexBox}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlexBlock;","import React, { Component } from 'react';\r\nimport Button from '../Utils/Button';\r\nimport styles from './form.module.scss';\r\n\r\nclass CvRequestForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            user :{\r\n                name: '',\r\n                company: '',\r\n                email: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState( prevState => {\r\n            return {\r\n                user : {\r\n                    ...prevState.user, [name]: value\r\n                }\r\n            }\r\n        }, () => console.log(this.state.user));\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const data = this.state.user;\r\n        const name = data.name;\r\n        const company = data.company;\r\n        const email = data.email;\r\n\r\n        console.log(name)\r\n\r\n        fetch('http://localhost:5000/v1/mailer',{\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                company,\r\n                email\r\n            })\r\n        }).then(res => {\r\n            res.json().then(data => console.log('success' + data))\r\n        });\r\n\r\n        this.setState({\r\n            user: {\r\n                name: '',\r\n                company: '',\r\n                email: ''\r\n            }\r\n        });\r\n\r\n        console.log(this.state.user)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Form__Container}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"name\">Full Name</label>\r\n                    <input name=\"name\" type=\"text\" onChange={this.handleChange} required />\r\n                    <label htmlFor=\"company\">Company Name</label>\r\n                    <input name=\"company\" type=\"text\" onChange={this.handleChange} required />\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input name=\"email\" type=\"email\" onChange={this.handleChange} required />\r\n                    <Button text=\"Request CV\" type=\"submit\"></Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CvRequestForm;","import React from 'react';\r\nimport '../GlobalStyles/global.scss';\r\nimport Layout from '../layouts/MainLayout';\r\nimport MiniHero from '../components/Elements/MiniHero';\r\nimport FlexBlock from '../components/Elements/FlexBlock';\r\nimport CvRequestForm from '../components/Forms/CvRequestForm';\r\nimport Button from '../components/Utils/Button';\r\n\r\nconst CvPage = () => {\r\n    return (\r\n        <Layout>\r\n            <MiniHero image=\"https://images.pexels.com/photos/33999/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" />\r\n            <h1>How would you like to view my CV?</h1>\r\n            <p>View in browser or have it sent to your email?</p>\r\n\r\n            <FlexBlock>\r\n                <CvRequestForm />\r\n                <div style={{\r\n                    display: 'flex', flexDirection: 'column', justifyContent: 'center'\r\n                }}>\r\n                    <h2>OR view as a PDF?</h2>\r\n                    <Button text=\"View CV\" link=\"/view-cv\" isLink />\r\n                </div>\r\n            </FlexBlock>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CvPage;"],"sourceRoot":""}