{"version":3,"sources":["webpack:///./src/components/Elements/FlexBlock.js","webpack:///./src/components/Utils/Button.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/Forms/CvRequestForm.js","webpack:///./src/pages/request-cv.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["FlexBlock","props","children","className","styles","FlexBox","Button","text","type","link","isLink","href","target","rel","PropsTypes","string","isRequired","Link","bool","default","$export","fails","defined","quot","createHTML","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","CvRequestForm","handleChange","e","preventDefault","name","setState","prevState","user","console","log","state","handleSubmit","data","company","email","fetch","method","mode","headers","body","JSON","stringify","then","res","json","render","Form__Container","onSubmit","this","htmlFor","onChange","required","Component","CvPage","MiniHero","image","style","display","flexDirection","justifyContent","url"],"mappings":"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","file":"component---src-pages-request-cv-js-a0a4ce48a209a094a6b1.js","sourcesContent":["import React from 'react';\r\nimport styles from './flexblock.module.scss';\r\n\r\nconst FlexBlock = props => {\r\n    const { children } = props;\r\n    return (\r\n        <div className={styles.FlexBox}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlexBlock;","import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport styles from './button.module.scss';\r\n\r\nconst Button = props => {\r\n    const { text, type, link, isLink } = props;\r\n    \r\n    if(isLink) {\r\n        return (\r\n            <button className={styles.Button}>\r\n                <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {text}\r\n                </a>\r\n            </button>\r\n        )\r\n    } else {\r\n        return (\r\n            <button type={type} className={styles.Button}>\r\n                {text}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nButton.PropsTypes = {\r\n    text: PropsTypes.string.isRequired,\r\n    Link: PropsTypes.string,\r\n    isLink: PropsTypes.bool\r\n}\r\n\r\nButton.default = {\r\n    link: '',\r\n    isLink: false\r\n}\r\n\r\nexport default Button;","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React, { Component } from 'react';\r\nimport Button from '../Utils/Button';\r\nimport styles from './form.module.scss';\r\n\r\nclass CvRequestForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            user :{\r\n                name: '',\r\n                company: '',\r\n                email: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState( prevState => {\r\n            return {\r\n                user : {\r\n                    ...prevState.user, [name]: value\r\n                }\r\n            }\r\n        }, () => console.log(this.state.user));\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const data = this.state.user;\r\n        const name = data.name;\r\n        const company = data.company;\r\n        const email = data.email;\r\n\r\n        console.log(name)\r\n\r\n        fetch('http://localhost:5000/v1/mailer',{\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                company,\r\n                email\r\n            })\r\n        }).then(res => {\r\n            res.json().then(data => console.log('success' + data))\r\n        });\r\n\r\n        this.setState({\r\n            user: {\r\n                name: '',\r\n                company: '',\r\n                email: ''\r\n            }\r\n        });\r\n\r\n        console.log(this.state.user)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Form__Container}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"name\">Full Name</label>\r\n                    <input name=\"name\" type=\"text\" onChange={this.handleChange} required />\r\n                    <label htmlFor=\"company\">Company Name</label>\r\n                    <input name=\"company\" type=\"text\" onChange={this.handleChange} required />\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input name=\"email\" type=\"email\" onChange={this.handleChange} required />\r\n                    <Button text=\"Request CV\" type=\"submit\"></Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CvRequestForm;","import React from 'react';\r\nimport '../GlobalStyles/global.scss';\r\nimport Layout from '../layouts/MainLayout';\r\nimport MiniHero from '../components/Elements/MiniHero';\r\nimport FlexBlock from '../components/Elements/FlexBlock';\r\nimport CvRequestForm from '../components/Forms/CvRequestForm';\r\nimport Button from '../components/Utils/Button';\r\n\r\nconst CvPage = () => {\r\n    return (\r\n        <Layout>\r\n            <MiniHero image=\"https://images.pexels.com/photos/33999/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" />\r\n            <h1>How would you like to view my CV?</h1>\r\n            <p>View in browser or have it sent to your email?</p>\r\n\r\n            <FlexBlock>\r\n                <CvRequestForm />\r\n                <div style={{\r\n                    display: 'flex', flexDirection: 'column', justifyContent: 'center'\r\n                }}>\r\n                    <h2>OR view as a PDF?</h2>\r\n                    <Button text=\"View CV\" link=\"/view-cv\" isLink />\r\n                </div>\r\n            </FlexBlock>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CvPage;","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}