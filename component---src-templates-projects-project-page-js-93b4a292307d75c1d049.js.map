{"version":3,"sources":["webpack:///./src/templates/projects/project-page.js","webpack:///./src/components/Utils/Button.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["ProjectPageTemplate","data","content","allProjectsJson","edges","node","image","imgae","console","log","className","styles","Content__Block","title","text","link","projectUrl","isLink","projectsPageQuery","Button","props","type","href","target","rel","PropsTypes","string","isRequired","Link","bool","default","$export","fails","defined","quot","createHTML","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","url","this"],"mappings":"4FAAA,uJAwBeA,UAhBa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvBC,EAAUD,EAAKE,gBAAgBC,MAAM,GAAGC,KAC5C,OACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,MAAOJ,EAAQK,QACxBC,QAAQC,IAAIR,GACX,yBAAKS,UAAWC,IAAOC,gBACrB,4BAAKV,EAAQW,OACb,2BAAIX,EAAQY,MACZ,kBAAC,IAAD,CAAQA,KAAK,eAAeC,KAAMb,EAAQc,WAAYC,QAAM,IAC5D,kBAAC,IAAD,CAAQH,KAAK,cAAcC,KAAMb,EAAQc,WAAYC,QAAM,OAQlE,IAAMC,EAAiB,c,+GCtBxBC,EAAS,SAAAC,GAAU,IACbN,EAA6BM,EAA7BN,KAAMO,EAAuBD,EAAvBC,KAAMN,EAAiBK,EAAjBL,KAEpB,OAFqCK,EAAXH,OAIlB,4BAAQP,UAAWC,IAAOQ,QACtB,uBAAGG,KAAMP,EAAMQ,OAAO,SAASC,IAAI,uBAC9BV,IAMT,4BAAQO,KAAMA,EAAMX,UAAWC,IAAOQ,QACjCL,IAMjBK,EAAOM,WAAa,CAChBX,KAAMW,IAAWC,OAAOC,WACxBC,KAAMH,IAAWC,OACjBT,OAAQQ,IAAWI,MAGvBV,EAAOW,QAAU,CACbf,KAAM,GACNE,QAAQ,GAGGE,O,qBCnCf,IAAIY,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUT,EAAQU,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOP,EAAQP,IACnBe,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQR,EAAM,UAAY,KACtFO,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKX,GACfJ,EAAQA,EAAQiB,EAAIjB,EAAQkB,EAAIjB,GAAM,WACpC,IAAIkB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,kCCfhB,EAAQ,OAAR,CAA0B,QAAQ,SAAUZ,GAC1C,OAAO,SAAcmB,GACnB,OAAOnB,EAAWoB,KAAM,IAAK,OAAQD","file":"component---src-templates-projects-project-page-js-93b4a292307d75c1d049.js","sourcesContent":["import React from 'react';\r\nimport '../../GlobalStyles/global.scss';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../../layouts/MainLayout';\r\nimport MiniHero from '../../components/Elements/MiniHero';\r\nimport Button from '../../components/Utils/Button';\r\nimport styles from './project-page.module.scss';\r\n\r\nconst ProjectPageTemplate = ({ data }) => {\r\n  const content = data.allProjectsJson.edges[0].node;\r\n    return (\r\n        <Layout>\r\n          <MiniHero image={content.imgae} />\r\n          {console.log(data)}\r\n            <div className={styles.Content__Block}>\r\n              <h1>{content.title}</h1>\r\n              <p>{content.text}</p>\r\n              <Button text=\"View Project\" link={content.projectUrl} isLink></Button>\r\n              <Button text=\"View Github\" link={content.projectUrl} isLink></Button>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default ProjectPageTemplate;\r\n\r\nexport const projectsPageQuery = graphql`\r\nquery($slug: String!) {\r\n    allProjectsJson(filter: {fields: {slug: {eq: $slug}}}) {\r\n      edges {\r\n        node {\r\n          id\r\n          gitUrl\r\n          lang\r\n          image\r\n          text\r\n          section\r\n          projectUrl\r\n          title\r\n        }\r\n      }\r\n    }\r\n}\r\n`;","import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport styles from './button.module.scss';\r\n\r\nconst Button = props => {\r\n    const { text, type, link, isLink } = props;\r\n    \r\n    if(isLink) {\r\n        return (\r\n            <button className={styles.Button}>\r\n                <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {text}\r\n                </a>\r\n            </button>\r\n        )\r\n    } else {\r\n        return (\r\n            <button type={type} className={styles.Button}>\r\n                {text}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nButton.PropsTypes = {\r\n    text: PropsTypes.string.isRequired,\r\n    Link: PropsTypes.string,\r\n    isLink: PropsTypes.bool\r\n}\r\n\r\nButton.default = {\r\n    link: '',\r\n    isLink: false\r\n}\r\n\r\nexport default Button;","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}